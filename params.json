{"name":"STS Experiments","tagline":"Minimal causal sequence experiments","body":"This repository is a collection of case studies (experiments) for bugs found with [STS](http://ucb-sts.github.io/sts/).\r\n\r\nSee the [walkthrough](http://ucb-sts.github.io/sts/walkthrough#phase_ii_troubleshooting) and [documentation](http://ucb-sts.github.io/sts/software_architecture.html#experiment_results) for a description of the contents of these directories.\r\n\r\n### Running old experiments\r\n\r\nTo properly rerun an old experiment you may need to rollback STS, POX, Hassel, and the control software to the software versions when the experiment was originally recorded.\r\n\r\nThe original software versions are stored in each experiment's `metadata` file. We provide two scripts in STS to automatically read the information stored there, rollback the software, and rerun experiments:\r\n\r\n- [tools/run_old_experiment.rb](https://github.com/ucb-sts/sts/blob/master/tools/run_old_experiment.rb): reruns a single experiment. Takes the path to the experiment directory as a first argument.\r\n\r\n- [tools/run_cmd_per_experiment.rb](https://github.com/ucb-sts/sts/blob/master/tools/run_cmd_per_experiment.rb): runs a shell command within each experiment directory from the SIGCOMM'14 paper. Usage:\r\n\r\n```\r\nUsage: run_cmd_per_experiment [options]\r\n    -c, --command-path PATH          Absolute path to a command to run within each directory\r\n    -e, --exclude-synthetic          Whether to exclude synthetic bug experiments\r\n    -r, --rollback-sts               Whether to rollback STS + dependencies to the versions specified in metadata.json\r\n```\r\n\r\nWe often write a simple shell script to execute some analysis on the experiment, and pass the path to the shell script to `run_cmd_per_experiment` with `-c`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}